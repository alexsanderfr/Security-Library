package com.laserbotlabs.securitylibrary.viewmodel

import androidx.lifecycle.LiveData
import androidx.lifecycle.MutableLiveData
import androidx.lifecycle.ViewModel
import com.laserbotlabs.securitylibrary.model.Vulnerability
import com.laserbotlabs.securitylibrary.util.Utils
import org.json.JSONObject

class VulnerabilityViewModel(private val json:String): ViewModel() {
    private val vulnerabilities: MutableLiveData<List<Vulnerability>> = MutableLiveData()

    init {
        loadVulnerabilities()
    }

    fun getVulnerabilities(): LiveData<List<Vulnerability>> {
        return vulnerabilities
    }

    private fun loadVulnerabilities() {
        val jsonObject = JSONObject(json)
        val vulnerabilitiesJsonArray = jsonObject.getJSONArray("vulnerabilities")
        val vulnerabilitiesArrayList: ArrayList<Vulnerability> = ArrayList()
        for (i in 0 until vulnerabilitiesJsonArray.length()) {
            val vulnerabilityJsonObject = vulnerabilitiesJsonArray.getJSONObject(i)
            val name = vulnerabilityJsonObject.getString("name")
            val description = vulnerabilityJsonObject.getString("description")
            val imageResource = vulnerabilityJsonObject.getInt("imageResource")
            val vulnerability = Vulnerability(name, description,
                if (imageResource == -1) Utils.getRandomColor() else imageResource)
            vulnerabilitiesArrayList.add(vulnerability)
        }
        vulnerabilities.value = vulnerabilitiesArrayList
    }
}
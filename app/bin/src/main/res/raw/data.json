{
  "vulnerabilities": [
    {
      "name": "Aplicações com ID de usuário compartilhado",
      "description": "Quando duas aplicações são assinadas com a mesma chave, é permitido ao aplicativo fazer uma requisição para rodar com o mesmo UID e até o mesmo processo. Tal atitude não é recomendada pelos desenvolvedores do sistema, dado que o Android pode se comportar de formas não intencionadas quando isso acontece, mas fica a critério do usuário instalar ou não esse tipo de aplicação. A funcionalidade não pode ser removida por ser base de grande parte do sistema Android.Um exemplo seria aplicativos de contatos e de telefone aparecendo como duas coisas diferentes na tela do dispositivo, mas internamente funcionando como um só.\n\nUma grande vulnerabilidade nesse caso acontece na concessão de permissões. Quando uma permissão é concedida a uma aplicação, qualquer outra aplicação que compartilhe um UID com esta terá acesso as mesmas permissões. Desta forma, é possível que um desenvolvedor mal intencionado pode fazer a requisição de uma determinada permissão em um aplicativo inofensivo e utilizá-la em outro sem que isso seja a intenção do usuário.",
      "imageResource": 0
    },
    {
      "name": "Instalação de aplicativos de fontes desconhecidas",
      "description": "Em seu estado nativo, é possível apenas instalar aplicações direto da Google Play Store. Entretanto, caso o usuário deseje, é possível a opção \"Fontes desconhecidas\" na tela de configurações do dispositivo, o que permite a instalação de aplicativos de qualquer fonte.\n\nCaso tal opção seja marcada, ainda há barreiras de segurança, como o Google Play Protect, que escaneia aplicativos em busca de código mal intencionado antes da instalação. Porém, caso o usuário deseje, também é possível desabilitar esse escaneamento. Tais opções oferecem ao usuário experiente uma grande flexibilidade na hora de instalar aplicações, mas também podem ser muito perigosas para usuários leigos, que podem instalar aplicações mal intencionadas sem perceber.",
      "imageResource": 1
    },
    {
      "name": "Negação de serviço",
      "description": "Em torno de 95\\% dos dispositivos Android estão sujeitos a negação de serviço. A nível de Android, negação de serviço pode partir tanto de aplicativos quanto de sites. O código mal intencionado fica rodando em loop, gastanto recursos do sistema como processamento ou bateria. Em alguns casos, é possível resolver esse problema fechando o aplicativo ou fechando o site, mas essa solução nem sempre é possível e então é necessário desinstalar o código que está gerando a negação de serviço.",
      "imageResource": 2
    },
    {
      "name": "Injeção de SQL",
      "description": "O banco de dados utilizado em Android é baseado em SQLite, seja através de código SQL direto ou de uma abstração conhecida como Room. Portanto, aplicações Android são vulneráveis a injeção de SQL, um tipo de ataque que ao passar códigos SQL a aplicações como texto, tentando forçar uma inserção desse código no banco de dados.",
      "imageResource": 3
    }
  ],
  "resources": [
    {
      "name" : "Isolamento de aplicações",
      "description": "Para construir o isolamento de aplicações, é utilizado o sistema de UID. Quando um aplicativo é instalado, o Android atribui automaticamente um UID e um diretório no ponto /data com permissão de leitura e escrita. Desta forma, obtém-se um isolamento completo de cada aplicativo, desde o processo isolado pelo UID aos arquivos isolados por uma pasta. À nível de Linux, o sistema funciona como se cada aplicativo fosse um usuário diferente.",
      "imageResource": 0
    },
    {
      "name" : "Sistema de permissões",
      "description": "Para permitir que aplicativos Android acessem recursos além do que é possível fazer na pasta de sistema, é utilizado o sistema de permissões. Uma permissão é um direito de acesso a um determinado recurso controlado pelo sistema, como por exemplo a câmera ou o GPS. Até o Android 6.0, permissões eram definidas no arquivo de manifesto do aplicativo, sendo concedidas a nível de instalação e irrevogáveis após concessão.\n\nEntretanto, a partir do Android 6.0, permissões tornaram-se revogáveis e são concedidas a nível de execução. Um aplicativo desenvolvido para versões Android a partir da 6.0 precisa fazer uma requisição de permissão quando quando um recurso controlado precisar ser acessado. O usuário pode então escolher conceder ou rejeitar a permissão. Também é possível revogar permissões individualmente na tela de gerenciamento de aplicativos, o que demanda uma checagem das permissões concedidas sempre que o aplicativo tentar utilizar um recurso controlado.",
      "imageResource": 1
    },
    {
      "name" : "Assinatura de aplicações",
      "description": "Aplicações Android, sejam elas a nível de usuário ou sistema, precisam ser assinadas pelo desenvolvedor. A forma que esta assinatura é feita é assinando o pacote APK, baseado no que é feito na assinatura de arquivos JAR. O sistema operacional utiliza então do certificado de assinatura para autenticar a instalação de atualizações para o aplicativo, ao comparar o certificado de assinatura instalado com o certificado do APK de atualização.",
      "imageResource": 2
    },
    {
      "name" : "Suporte a multi-usuários",
      "description": "A partir da versão 4.2, o Android ganhou suporte a múltiplos usuários em um só dispositivo. Como o sistema de UID do Linux já está sendo utilizado, foi necessário utilizar de uma solução mais criativa para diferenciar usuários. O que é feito então é estabelecer um ID para cada usuário e dar a cada aplicativo um UID efetivo, baseado no UID original e no ID do usuário que instalou o aplicativo. Assim, mesmo que dois usuários instalem um mesmo aplicativo, este será isolado separadamente para cada usuário, com seu próprio processo e pasta /data.\n\nO primeiro usuário a ser criado no dispositivo é considerado o dono e portanto recebe permissões especiais. Ele fica encarregado do gerenciamento de usuários e também tem privilégios como apagar aplicativos de outros usuários e restaurar as configurações de fábrica do aparelho.",
      "imageResource": 3
    },
    {
      "name" : "Atualizações de sistema",
      "description": "Atualizações de sistema são quando a Google ou o fabricante disponibilizam uma versão nova, numerada ou não, para ser instalada pelos usuários. Estas podem ser instaladas direto do próprio aparelho via internet ou conectando o aparelho num computador e transmitindo a atualização via USB. Quando uma atualização é instalada, o aparelho é reiniciado em modo de recuperação, um modo onde a atualização é instalada. Alternativamente, o usuário também pode acessar manualmente o modo de recuperação e fazer a instalação do arquivo de atualização, desde que esteja assinado pelo fabricante.\n\nEm geral, atualizações de sistema costumam se dividir entre numeradas, trazendo funções novas ao dispositivo (como por exemplo o Android 5.0 e a interface em Material Design) e atualizações de segurança, que são mais frequentes e se limitam a corrigir problemas de segurança do aparelho.",
      "imageResource": 4
    }
  ],
  "attacks": [
    {
      "name": "Ataques baseados em bibliotecas nativas",
      "description": "Ataques baseados em bibliotecas nativas são aqueles que aproveitam-se das falhas em bibliotecas utilizadas por aplicativos nativos para ganhar controle do dispositivo. Estes aplicativos são normalmente os mais seguros contra ataques, pois são desenvolvidos e recebem manutenção diretamente da Google e/ou da fabricante, entretanto não são completamente livres de vulnerabilidades.\n\nEm março de 2017, foi descoberto falhas críticas no OpenSSL e no BoringSSL, visto que permitem que ataques corrompam memória e arquivos no momento do processamento de dados, através do uso de um arquivo preparado para isso.",
      "canBeTested": false,
      "imageResource": 0
    },
    {
      "name": "Ataques baseados em bibliotecas de terceiros",
      "description": "Respectivamente, ataques baseados em bibliotecas de terceiros se aproveitam-se das falhas em bibliotecas utilizadas por aplicativos instalados pelo usuário para ganhar controle do dispositivo. Estas aplicações são muito mais vulneráveis a nível de segurança, pois dependem de um desenvolvedor mantendo as dependências atualizadas, o que nem sempre acontecerá caso não seja de interesse do desenvolvedor, e também do usuário mantendo o aplicativo atualizado, o que é muitas vezes negligenciado.\n\nBibliotecas são parte do arquivo .apk de cada aplicativo. Estas são uma parte significativa do código gerado no apk, chegando em média a mais de 60\\% do código total, tendo cada aplicativo 20 ou mais bibliotecas de terceiros. Estas podem também pedir permissões no nome do aplicativo, o que aumenta a quantidade total de permissões necessárias para rodar um aplicativo e também o número de vulnerabilidades.",
      "canBeTested": false,
      "imageResource": 1
    },
    {
      "name": "Colusão entre bibliotecas",
      "description": "Quando dois aplicativos são instalados num dispositivo com uma mesma biblioteca, o sistema operacional trata esta biblioteca como uma só. A vantagem desse tratamento é evitar a repetição do código da biblioteca em áreas diferentes do armazenamento. Entretanto, a nível de segurança, há a desvantagem que é que quando permissões são concedidas a biblioteca em um determinado aplicativo, estas mesmas permissões são acessíveis pela biblioteca no outro aplicativo, mesmo que não tenham sido concedidas especificamente para esse.\n\nBibliotecas de anúncio em especial podem agir de forma particularmente imprevisível. Um usuário que instale, por exemplo, um aplicativo de GPS com uma determinada biblioteca X de anúncios, não irá ver problema em conceder permissões de localização ao aplicativo. Entretanto, caso essa mesma biblioteca esteja em um aplicativo de jogo, esta permissão será acessível através da biblioteca de anúncios. Sendo assim, a biblioteca pode usar a permissão para enviar anúncios personalizados baseados na localização do usuário mesmo no jogo.\n\nEm casos mais extremos, desenvolvedores de malware podem utilizar desta falha para obter dados do usuário. Com estes dados, seria possível chantagear e ameaçar o usuário ou vender os dados para terceiros.",
      "canBeTested": false,
      "imageResource": 2
    },
    {
      "name": "Escalação de privilégios",
      "description": "Ataques de escalação de privilégios são ataques que utilizam dos privilégios concedidos a eles para rodar código malicioso que use de falhas no sistema para obter privilégios que o usuário não concedeu. Em Android, isso é feito usando das permissões que um aplicativo tem para aumentar a quantidade de permissões, sem o consentimento do usuário.\n\nA forma mais fácil de fazer isso é, novamente, através da exploração de bibliotecas de terceiros. Por dia, informação privada do usuário é vazada 2.4 vezes de apenas um smartphone.\n\nPor conta disso, é muito importante que desenvolvedores façam aplicativos com a mínima quantidade de permissões para rodar o aplicativo, e que usuários mantenham-se atentos antes de conceder à aplicativos permissões que possam ser exploradas por agentes mal intencionados.",
      "canBeTested": false,
      "imageResource": 3
    }
  ]
}